---
name: _aks

on:
  workflow_call:
    inputs:
      resource_group:
        description: Resource group name
        type: string
        default: allianz
        required: true
      cred:
        description: Azure Credentials
        type: string
        required: true
    # output:
    #   aks_cluster:
    #     description: cluster id
    #     value: ${{ jobs.aks.outputs }}
# env:
#   CLUSTER_NAME: ${{ inputs.cluster_name }}

jobs:
  azure:
    name: Azure Login
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login 
        uses: ./.github/actions/login
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}         

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    # - uses: azure/aks-set-context@v1
    #   with:
    #     creds: '${{ secrets.AZURE_CREDENTIALS }}'
    #     cluster-name: ${{ env.CLUSTER_NAME }}
    #     resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # # Create namespace if doesn't exist
    # - run: |
    #     kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    
    # # Create imagepullsecret for Azure Container registry (ACR)
    # - uses: azure/k8s-create-secret@v1
    #   with:
    #     container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
    #     container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
    #     container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
    #     secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
    #     namespace: ${{ env.NAMESPACE }}
    
    # # Deploy app to AKS
    # - uses: azure/k8s-deploy@v1
    #   with:
    #     manifests: |
    #       manifests/deployment.yml
    #       manifests/service.yml
    #     images: |
    #       ${{ env.REGISTRY_NAME }}.azurecr.io/myimage:${{ github.sha }}
    #     imagepullsecrets: |
    #       ${{ env.REGISTRY_NAME }}-registry-connection
    #     namespace: ${{ env.NAMESPACE }}